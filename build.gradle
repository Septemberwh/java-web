allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    group 'java-web'
    version '1.0-SNAPSHOT'

    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        maven{ url "${mavenRepoUrl}"}
        maven { url 'https://repository.incarcloud.com/content/repositories/snapshots/' }
        jcenter()
        //mavenCentral()
    }

    dependencies {
        //springboot web支持
        compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
        //json
        compile("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
        compile("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
        compile("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
        //swagger集成
        compile "io.springfox:springfox-swagger2:${swaggerVersion}"
        compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"
        //vco
        compile ("com.incarcloud.vco:VCOService:3.0-SNAPSHOT")

    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked"
            options.compilerArgs << "-parameters"
            options.encoding = "UTF-8"
            options.warnings = false
        }
    }

    jar {
        enabled = true
    }

    /**
     * SpringBoot 2开始,使用gradle bootJar进行打包,并要配置入口类
     */
    bootJar {
        manifest {
            attributes 'Start-Class': 'com.incarcloud.Application'
        }
    }

}

bootRun {
    /**
     * 启动时候带入jvm的参数;如下(启动jvisualvm监控)
     * nohup gradle bootRun -PjvmArgs="-Djava.rmi.server.hostname=172.16.24.36 -Dcom.sun.management.jmxremote.port=10001 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=true" &
     */
    if (project.hasProperty('jvmArgs') ) {
        jvmArgs = (project.jvmArgs.split("\\s+") as List)
    }
}

buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
        jacksonVersion = '2.9.6'
        swaggerVersion='+'
        mavenRepoUrl='http://maven.aliyun.com/nexus/content/groups/public/'
    }
    repositories {
        mavenLocal()
        maven { url "${mavenRepoUrl}" }
        jcenter()
    }
    dependencies {
        //使用springboot框架
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
